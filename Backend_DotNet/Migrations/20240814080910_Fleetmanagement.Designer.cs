// <auto-generated />
using System;
using FM.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fleetmanagementnew.Migrations
{
    [DbContext(typeof(FMContext))]
    [Migration("20240814080910_Fleetmanagement")]
    partial class Fleetmanagement
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Airport", b =>
                {
                    b.Property<long>("AirportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AirportId"));

                    b.Property<string>("AirportCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("AirportName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<long>("HubId")
                        .HasColumnType("bigint");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("AirportId");

                    b.HasIndex("CityId");

                    b.HasIndex("HubId");

                    b.HasIndex("StateId");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("FM.Modles.AddOn", b =>
                {
                    b.Property<long>("AddonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AddonId"));

                    b.Property<decimal>("AddonDailyRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("AddonName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("RateValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("AddonId");

                    b.ToTable("AddOn");
                });

            modelBuilder.Entity("FM.Modles.Booking", b =>
                {
                    b.Property<long>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("booking_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BookingId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("booking_date");

                    b.Property<long>("CarTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("cartype_id");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("cust_id");

                    b.Property<decimal>("DailyRate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("daily_rate");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email_ID");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_name");

                    b.Property<decimal>("MonthlyRate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("monthly_rate");

                    b.Property<long>("PHubId")
                        .HasColumnType("bigint")
                        .HasColumnName("p_hubId");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pin");

                    b.Property<long>("RHubId")
                        .HasColumnType("bigint")
                        .HasColumnName("r_hubId");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("state");

                    b.Property<decimal>("WeeklyRate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("weekly_rate");

                    b.HasKey("BookingId");

                    b.HasIndex("CarTypeId");

                    b.HasIndex("CustomerId");

                    b.ToTable("booking");
                });

            modelBuilder.Entity("FM.Modles.BookingDetail", b =>
                {
                    b.Property<long>("BookingDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("booking_detail_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BookingDetailId"));

                    b.Property<long>("AddonId")
                        .HasColumnType("bigint")
                        .HasColumnName("addon_id");

                    b.Property<decimal>("AddonRate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("addon_rate");

                    b.Property<long>("BookingId")
                        .HasColumnType("bigint")
                        .HasColumnName("booking_id");

                    b.HasKey("BookingDetailId");

                    b.HasIndex("BookingId");

                    b.ToTable("booking_detail");
                });

            modelBuilder.Entity("FM.Modles.Car", b =>
                {
                    b.Property<long>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Car_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CarId"));

                    b.Property<long>("Capacity")
                        .HasColumnType("bigint")
                        .HasColumnName("Capacity");

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Car_Name");

                    b.Property<long>("CarTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("CarType_ID");

                    b.Property<long>("HubId")
                        .HasColumnType("bigint")
                        .HasColumnName("Hub_ID");

                    b.Property<string>("IsAvailable")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasColumnName("Is_Available");

                    b.Property<DateTime>("MaintenanceDueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Maintenance_Due_Date");

                    b.Property<double>("Mileage")
                        .HasColumnType("float")
                        .HasColumnName("Mileage");

                    b.Property<string>("NumberPlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Number_Plate");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Status");

                    b.HasKey("CarId");

                    b.HasIndex("CarTypeId");

                    b.HasIndex("HubId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("FM.Modles.CarType", b =>
                {
                    b.Property<long>("CarTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CarTypeId"));

                    b.Property<string>("CarTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CarType_Name");

                    b.Property<double>("DailyRate")
                        .HasColumnType("float")
                        .HasColumnName("Daily_Rate");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image_Path");

                    b.Property<double>("MonthlyRate")
                        .HasColumnType("float")
                        .HasColumnName("Monthly_Rate");

                    b.Property<double>("WeeklyRate")
                        .HasColumnType("float")
                        .HasColumnName("Weekly_Rate");

                    b.HasKey("CarTypeId");

                    b.ToTable("Car_Type");
                });

            modelBuilder.Entity("FM.Modles.City", b =>
                {
                    b.Property<long>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CityId"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("State_ID")
                        .HasColumnType("bigint");

                    b.HasKey("CityId");

                    b.HasIndex("State_ID");

                    b.ToTable("City_Master");
                });

            modelBuilder.Entity("FM.Modles.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CustomerId"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditCardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("CreditCardType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DrivingLicenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdpNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuedByDL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("PassportIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassportIssuedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PassportValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PassportValidThrough")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime?>("ValidThroughDL")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("FM.Modles.Hub", b =>
                {
                    b.Property<long>("HubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HubId"));

                    b.Property<long?>("CityId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<long?>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnName("contactNumber");

                    b.Property<string>("HubAddressAndDetails")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Hub_Address_and_Details");

                    b.Property<string>("HubName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.HasKey("HubId");

                    b.HasIndex("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("Hubs");
                });

            modelBuilder.Entity("FM.Modles.Invoice", b =>
                {
                    b.Property<long>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("InvoiceId"));

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<string>("CAadharNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CEmailId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CMobileNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CPassNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long>("CarId")
                        .HasColumnType("bigint");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HandoverDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsReturned")
                        .HasColumnType("int")
                        .HasColumnName("isReturned");

                    b.Property<long>("PHubId")
                        .HasColumnType("bigint");

                    b.Property<long>("RHubId")
                        .HasColumnType("bigint");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<double>("RentalAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalAddonAmount")
                        .HasColumnType("float");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.HasKey("InvoiceId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("FM.Modles.InvoiceDetail", b =>
                {
                    b.Property<long>("IdetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdetailId"));

                    b.Property<long>("AddonId")
                        .HasColumnType("bigint");

                    b.Property<long>("Amt")
                        .HasColumnType("bigint");

                    b.Property<long>("InvoiceId")
                        .HasColumnType("bigint");

                    b.HasKey("IdetailId");

                    b.ToTable("Invoice_detail");
                });

            modelBuilder.Entity("FM.Modles.State", b =>
                {
                    b.Property<long>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StateId"));

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateId");

                    b.ToTable("State_Master");
                });

            modelBuilder.Entity("Airport", b =>
                {
                    b.HasOne("FM.Modles.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FM.Modles.Hub", "Hub")
                        .WithMany()
                        .HasForeignKey("HubId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FM.Modles.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Hub");

                    b.Navigation("State");
                });

            modelBuilder.Entity("FM.Modles.Booking", b =>
                {
                    b.HasOne("FM.Modles.CarType", "CarType")
                        .WithMany()
                        .HasForeignKey("CarTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FM.Modles.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarType");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("FM.Modles.BookingDetail", b =>
                {
                    b.HasOne("FM.Modles.Booking", "Booking")
                        .WithMany("BookingDetails")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("FM.Modles.Car", b =>
                {
                    b.HasOne("FM.Modles.CarType", "CarType")
                        .WithMany()
                        .HasForeignKey("CarTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FM.Modles.Hub", "Hub")
                        .WithMany()
                        .HasForeignKey("HubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarType");

                    b.Navigation("Hub");
                });

            modelBuilder.Entity("FM.Modles.City", b =>
                {
                    b.HasOne("FM.Modles.State", "State")
                        .WithMany()
                        .HasForeignKey("State_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("FM.Modles.Hub", b =>
                {
                    b.HasOne("FM.Modles.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FM.Modles.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("State");
                });

            modelBuilder.Entity("FM.Modles.Booking", b =>
                {
                    b.Navigation("BookingDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
